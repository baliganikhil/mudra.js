{"name":"Mudra.js","tagline":"mudra.js is an Authentication & Authorisation system in NodeJS","body":"mudra.js\r\n===\r\n\r\nMudra is a simple authentication and authorisation library for NodeJS that uses MongoDB for storing credentials.\r\n\r\n###Installation\r\n```\r\nnpm install mudra\r\n```\r\n\r\n##Usage\r\n```\r\nvar mudra = require('mudra');\r\n```\r\n\r\n**Mudra functions support both callbacks and promises using Q**\r\n\r\n___\r\n###Authentication\r\n\r\n####Register account\r\n\r\nExample using Callback\r\n```javascript\r\nvar params = {username: 'bill.gates@microsoft.com', password: 'microsoft', name: 'Bill Gates'};\r\nmudra.register(params, function(response) {\r\n   console.log(response);\r\n});\r\n```\r\n\r\nExample using promises\r\n```javascript\r\nvar params = {username: 'bill.gates@microsoft.com', password: 'microsoft', name: 'Bill Gates'};\r\nmudra.register(params).then(success, error);\r\n\r\nfunction success(response) {\r\n   console.log('success: ', response);\r\n}\r\n\r\nfunction error(response) {\r\n   console.error('Error: ', response);\r\n}\r\n```\r\n\r\n####Login\r\n```javascript\r\nvar params = {username: 'bill.gates@microsoft.com', password: 'microsoft'};\r\nmudra.login(params, function(response) {\r\n   console.log(response);\r\n});\r\n```\r\n\r\n####Authenticate\r\n```javascript\r\nvar params = {username: 'bill.gates@microsoft.com', hash: '$2a$08$4Y7NNgKwZavoT8B.xy6RyuZPXOpxsitDNjq9nSlApRFh/ZAVL3WV2'};\r\nmudra.authenticate(params, function(response) {\r\n   console.log(response);\r\n});\r\n```\r\n___\r\n###Authorisation\r\n\r\n\r\n####Create Role\r\n```javascript\r\nvar params = {role: 'admin'};\r\nmudra.create_role(params, function(response) {\r\n   console.log(response);\r\n});\r\n```\r\n\r\n####Update Role (add or remove members)\r\n```javascript\r\nvar params = {role: 'admin', users: [{username: 'bill.gates@microsoft', name: 'Bill Gates'}]};\r\nmudra.update_roles(params, function(callback) {\r\n   console.log(response);\r\n});\r\n```\r\n####Create Permission\r\n```javascript\r\nvar params = {permission: 'cancel_order'};\r\nmudra.create_permission(params, function(response) {\r\n   console.log(response);\r\n});\r\n```\r\n####Update Permission (add or remove roles)\r\n```javascript\r\nvar params = {permission: 'cancel_order', roles: ['admin']};\r\nmudra.update_permission(params, function(callback) {\r\n   console.log(response);\r\n});\r\n```\r\n####Check if user has permission\r\n```javascript\r\nvar params = {username: 'bill.gates@microsoft.com', hash: '$2a$08$4Y7NNgKwZavoT8B.xy6RyuZPXOpxsitDNjq9nSlApRFh/ZAVL3WV2', permission: 'cancel_order'};\r\nmudra.check_permission(params, function(callback) {\r\n   console.log(response);\r\n});\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}